version: '3.8'

services:
  streamlit-app:
    build:
      context: .  
      dockerfile: app/Dockerfile
    env_file:
      - .env
    container_name: streamlit_app
    ports:
      - "8501:8501"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - ticket-app_postgres_network

  api:
    build:
      context: .  
      dockerfile: api/Dockerfile
    env_file:
      - .env
    container_name: api
    ports:
      - "5001:5000"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - ticket-app_postgres_network 

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      retries: 5
    networks:
      - ticket-app_postgres_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "7552:80"
    depends_on:
      - db
    networks:
      - ticket-app_postgres_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
    ports:
      - "3013:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - db
    networks:
      - ticket-app_postgres_network

volumes:
  postgres_data:
  grafana_data:

networks:
  ticket-app_postgres_network:
    driver: bridge
